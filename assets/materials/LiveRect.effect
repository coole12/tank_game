// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        leftRect: {
          value: [0,0,0.3,0.3],
          editor: {
            toolTip: "左边需要透明的区域"
          }
        }
        rightRect: {
          value: [0.7,0,1,0.3],
          editor: {
            toolTip: "右边需要透明的区域"
          }
        }
        
}%



CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif
  uniform ARGS{
    vec4 leftRect;
    vec4 rightRect;
   
  };

  void main () {
    // 灰度：将颜色的RGB设置为相同的值即可使得图片为灰色，一般处理方法有：
    // 1、取三种颜色的平均值
    // 2、取三种颜色的最大值（最小值）
    // 3、加权平均值：0.3R + 0.59G + 0.11*B
    vec4 color = texture(texture, v_uv0);
    if(v_uv0.x>leftRect.x && v_uv0.x< leftRect.z && v_uv0.y>leftRect.y && v_uv0.y < leftRect.w){
      color = vec4(0, 0, 0, 0);
    }
    if(v_uv0.x>rightRect.x && v_uv0.x < rightRect.z && v_uv0.y>rightRect.y && v_uv0.y < rightRect.w){
      color = vec4(0, 0, 0, 0);
    }
    
		gl_FragColor = color;
  }
}%
